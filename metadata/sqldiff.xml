<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
	<help>
		
	</help>
	
	<diff>
		<version>0.1</version>
		<author>Ben Wolfe</author>
		<date>Aug 21st 2009</date>
		<description>
			Create sync tables
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS `sync_record` (
			  `record_id` int(11) NOT NULL auto_increment,
			  `uuid` char(36) NOT NULL,
			  `creator` char(36) default NULL,
			  `database_version` char(8) default NULL,
			  `timestamp` datetime default NULL,
			  `retry_count` int(11) default NULL,
			  `state` varchar(20) default NULL,
			  `payload` longtext,
			  `contained_classes` varchar(1000) default '',
			  `original_uuid` varchar(36) NOT NULL,	  
			  PRIMARY KEY  (`record_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		
			CREATE TABLE IF NOT EXISTS `sync_import` (
			  `record_id` int(11) NOT NULL auto_increment,
			  `uuid` char(36) NOT NULL,
			  `creator` char(36) default NULL,
			  `database_version` char(8) default NULL,
			  `timestamp` datetime default NULL,
			  `retry_count` int(11) default NULL,
			  `state` varchar(20) default NULL,
			  `payload` longtext,
			  `error_message` varchar(255) default NULL,
			  PRIMARY KEY  (`record_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		
			CREATE TABLE IF NOT EXISTS `sync_server` (
			  `server_id` int(11) NOT NULL auto_increment,
			  `nickname` varchar(255) default NULL,
			  `address` varchar(255) NOT NULL,
			  `server_type` varchar(20) NOT NULL,
			  `username` varchar(255) default NULL,
			  `password` varchar(255) default NULL,
			  `uuid` char(36) default NULL,
			  `last_sync` datetime default NULL,
			  `last_sync_state` varchar(50) default NULL,
			  `disabled` tinyint(1) NOT NULL,
			  `child_username` varchar(50) default '',
			  PRIMARY KEY  (`server_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		
			CREATE TABLE IF NOT EXISTS `sync_class` (
			  `class_id` int(11) NOT NULL auto_increment,
			  `name` varchar(255) NOT NULL,
			  `type` varchar(255) NOT NULL,
			  `default_to` tinyint(1) NOT NULL,
			  `default_from` tinyint(1) NOT NULL,
			  PRIMARY KEY  (`class_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;	
			
			CREATE TABLE IF NOT EXISTS `sync_server_class` (
				`server_class_id` int(11) NOT NULL auto_increment,
				`class_id` int(11) NOT NULL,
				`server_id` int(11) NOT NULL,
				`send_to` tinyint(1) NOT NULL,
				`receive_from` tinyint(1) NOT NULL,
				PRIMARY KEY  (`server_class_id`),
				KEY `server_class_class` (`class_id`),
				KEY `server_class_server` (`server_id`),
				CONSTRAINT `server_class_class` FOREIGN KEY (`class_id`) REFERENCES `sync_class` (`class_id`),
				CONSTRAINT `server_class_server` FOREIGN KEY (`server_id`) REFERENCES `sync_server` (`server_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		
			CREATE TABLE IF NOT EXISTS `sync_server_record` (
				`server_record_id` int(11) NOT NULL auto_increment,
				`server_id` int(11) NOT NULL,
				`record_id` int(11) NOT NULL,
				`state` varchar(20) default NULL,
				`retry_count` int(11) default NULL,
				PRIMARY KEY  (`server_record_id`),
				KEY `server_record_server` (`server_id`),
				KEY `server_record_record` (`record_id`),
				CONSTRAINT `server_record_server` FOREIGN KEY (`server_id`) REFERENCES `sync_server` (`server_id`),
				CONSTRAINT `server_record_record` FOREIGN KEY (`record_id`) REFERENCES `sync_record` (`record_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		</sql>
	</diff>
	
	<diff>
		<version>0.2</version>
		<author>Ben Wolfe</author>
		<date>Aug 21st 2009</date>
		<description>
			Add rows to the sync class table
		</description>
		<sql>
			INSERT INTO `sync_class` (`name`,`type`,`default_to`,`default_from`) values
			('Cohort', 'PATIENT', 1, 1),
			('ComplexObs', 'PATIENT', 1, 1),
			('Concept', 'DICTIONARY', 1, 1),
			('ConceptAnswer', 'DICTIONARY', 1, 1),
			('ConceptClass', 'DICTIONARY', 1, 1),
			('ConceptComplex', 'DICTIONARY', 1, 1),
			('ConceptDatatype', 'DICTIONARY', 1, 1),
			('ConceptDerived', 'DICTIONARY', 1, 1),
			('ConceptDescription', 'DICTIONARY', 1, 1),
			('ConceptMap', 'DICTIONARY', 1, 1),
			('ConceptName', 'DICTIONARY', 1, 1),
			('ConceptNameTag', 'DICTIONARY', 1, 1),
			('ConceptNumeric', 'DICTIONARY', 1, 1),
			('ConceptProposal', 'DICTIONARY', 1, 1),
			('ConceptSet', 'DICTIONARY', 1, 1),
			('ConceptSetDerived', 'DICTIONARY', 1, 1),
			('ConceptSource', 'DICTIONARY', 1, 1),
			('ConceptStateConversion', 'PATIENT', 1, 1),
			('ConceptSynonym', 'DICTIONARY', 1, 1),
			('ConceptWord', 'DICTIONARY', 1, 1),
			('Drug', 'DICTIONARY', 1, 1),
			('DrugIngredient', 'DICTIONARY', 1, 1),
			('DrugOrder', 'PATIENT', 1, 1),
			('Encounter', 'PATIENT', 1, 1),
			('EncounterType', 'PATIENT', 1, 1),
			('Field', 'FORM', 1, 1),
			('FieldAnswer', 'FORM', 1, 1),
			('FieldType', 'FORM', 1, 1),
			('Form', 'FORM', 1, 1),
			('FormField', 'FORM', 1, 1),
			('GlobalProperty', 'MISC', 0, 0),
			('Location', 'PATIENT', 1, 1),
			('LoginCredential', 'REQUIRED', 1, 1),
			('MimeType', 'DICTIONARY', 1, 1),
			('Obs', 'PATIENT', 1, 1),
			('Order', 'PATIENT', 1, 1),
			('OrderType', 'PATIENT', 1, 1),
			('Patient', 'PATIENT', 1, 1),
			('PatientIdentifier', 'PATIENT', 1, 1),
			('PatientIdentifierType', 'PATIENT', 1, 1),
			('PatientProgram', 'PATIENT', 1, 1),
			('PatientState', 'PATIENT', 1, 1),
			('Person', 'REQUIRED', 1, 1),
			('PersonAddress', 'PATIENT', 1, 1),
			('PersonAttribute', 'PATIENT', 1, 1),
			('PersonAttributeType', 'PATIENT', 1, 1),
			('PersonName', 'PATIENT', 1, 1),
			('Privilege', 'REQUIRED', 1, 1),
			('Program', 'PATIENT', 1, 1),
			('ProgramWorkflow', 'PATIENT', 1, 1),
			('ProgramWorkflowState', 'PATIENT', 1, 1),
			('Relationship', 'PATIENT', 1, 1),
			('RelationshipType', 'PATIENT', 1, 1),
			('Role', 'REQUIRED', 1, 1),
			('User', 'REQUIRED', 1, 1);
		</sql>
	</diff>
	
	<diff>
		<version>0.3</version>
		<author>Ben Wolfe</author>
		<date>Aug 21st 2009</date>
		<description>
			Create/fill-in server uuid global property
		</description>
		<sql>
			DELETE FROM
				global_property 
			WHERE
				property = 'sync.server_uuid'
				and
				(
					property_value is null
					or
					property_value = ''
				);
				
			INSERT INTO
				global_property (property, property_value, description, uuid)
			VALUES (
				'sync.server_uuid',
				uuid(),
				'Universally unique server id used to identify a given data source in synchronization.',
				uuid());
		</sql>
	</diff>
	
</sqldiff>